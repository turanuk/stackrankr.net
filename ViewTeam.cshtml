@* Note: This page follows "Very Bad Practices©" for a single-page application for better editor coverage  *@

@{
  WebSecurity.RequireAuthenticatedUser();
  Layout = "~/_SiteLayout.cshtml";
  var teamId = UrlData[0].AsInt();
  if (teamId == 0) {
    Response.Redirect("~/Error");
  }
  var db = Database.Open("stackRankR");
  if (db.QuerySingle("SELECT * FROM Team WHERE Id = @0", teamId) == null) {
    Response.Redirect("~/Error");
  }
  var rankings = db.Query("SELECT * FROM Ranking WHERE TeamId = @0", teamId);
}

@section Scripts {
  <script>
    $(function () {
      $('.rankingTitle').click(function () {
        var rankingText = $(this).html();
        var rankingId = $(this).attr('data-rankingId');
        var rankingTitleElement = $(this);
        $("#rankingDialog").dialog({
          modal: true,
          draggable: false,
          resizable: false,
          buttons: {
            "Update": function () {
              var newRankingText = $('#newRankingName').val();
              if (newRankingText === '') {
                $('.error').show();
              } else {
                $.post('/endpoints/updateranking', { RankingId: rankingId, RankingText: newRankingText }, function () {
                  rankingTitleElement.html(newRankingText);
                });
                $(this).dialog('close');
              }
            },
            "Cancel": function () {
              $(this).dialog('close');
            }
          },
          open: function () {
            $('#newRankingName').val(rankingText);
            $('#newRankingName').select();
          }
        });
      });

      $('.addPerson').click(function () {
        var rankingId = $(this).attr('data-rankingId');
        var rankingContainer = $(this).prev('.peopleContainer');
        $("#personDialog").dialog({
          modal: true,
          draggable: false,
          resizable: false,
          buttons: {
            "Insert": function () {
              var newPersonDesc = $('#newPersonDesc').val();
              if (newPersonDesc === '') {
                $('.error').show();
              } else {
                $.post('/endpoints/addperson', { RankingId: rankingId, PersonDescription: newPersonDesc }, function (data) {
                  rankingContainer.append('<li class="person ui-state-default" data-personId="' + data + '" data-rankingId="' + rankingId + '"><a href="javascript: return false" class="modifyPerson">' + newPersonDesc + '</a></li>')
                });
                $(this).dialog('close');
              }
            },
            "Cancel": function () {
              $(this).dialog('close');
            }
          },
          open: function () {
            $('#newPersonDesc').val('');
          }
        });
      });

      $('.modifyPerson').click(function () {
        var personDescription = $(this).html();
        var personDescriptionDom = $(this);
        var personDom = $(this).parent('.person');
        var personId = personDom.attr('data-personId');
        var rankingId = personDom.attr('data-rankingId');
        $("#editPersonDialog").dialog({
          modal: true,
          draggable: false,
          resizable: false,
          buttons: {
            "Update": function () {
              var editPersonDesc = $('#editedPersonDesc').val();
              if (editPersonDesc === '') {
                $('.error').show();
              } else {
                $.post('/endpoints/updatePerson', { PersonId: personId, RankingId: rankingId, PersonDescription: editPersonDesc }, function () {
                  personDescriptionDom.html(editPersonDesc);
                });
                $(this).dialog('close');
              }
            },
            "Cancel": function () {
              $(this).dialog('close');
            }
          },
          open: function () {
            $('#editedPersonDesc').val(personDescription);
            $('#editedPersonDesc').select();
          }
        });
        });

      $('.peopleContainer').sortable(
        {
          connectWith: '.peopleContainer',
        placeholder: 'ui-state-highlight',
        helper: 'clone',
        forcePlaceholderSize: true
        });
     });
  </script>
}

@if (rankings.Count() == 0) {
  <h2>No rankings yet!</h2>
} else {
  <div class="rankingContainer">
    @foreach (var ranking in rankings) {
      <div class="ranking" data-rankingId="@ranking.Id">
        <a href="javascript: return false;"><h3 class="rankingTitle" data-rankingId="@ranking.Id">@ranking.Name</h3></a>
        <ul class="peopleContainer">
          @{
            var people = db.Query("SELECT * FROM Person WHERE RankingId = @0", ranking.Id);
            foreach (var person in people) {
            <li class="person ui-state-default" data-personId="@person.Id" data-rankingId="@ranking.Id">
              <a href="javascript: return false" class="modifyPerson">@person.Description</a>
            </li>
            }
          }
        </ul>
        <a href="javascript: return false;" data-rankingId="@ranking.Id" class="addPerson">Add a person</a>
      </div>
    }
  </div>
}

<div id="rankingDialog" class="dialogContainer" title="Ranking Name">
  <p>Enter the new name for this ranking:</p>
  <input id="newRankingName" type="text" class="dialogInput"/><span class="error">*</span>
</div>

<div id="personDialog" class="dialogContainer" title="Add a Person">
  <p>Enter the description for this person</p>
  <input id="newPersonDesc" type="text" class="dialogInput"/><span class="error">*</span>
</div>

<div id="editPersonDialog" class="dialogContainer" title="Edit Person">
  <p>Enter the updated description for this person</p>
  <input id="editedPersonDesc" type="text" class="dialogInput"/><span class="error">*</span>
</div>